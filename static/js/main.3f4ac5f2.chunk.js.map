{"version":3,"sources":["ColorModeSwitcher.tsx","components/note-form.tsx","components/top-nav.tsx","configs/site-config.ts","components/footer-signup.tsx","components/page-footer.tsx","data/cover_images.ts","assets/images/cover_images/blog_1.png","assets/images/cover_images/blog_2.png","assets/images/cover_images/portfolio.png","assets/images/cover_images/image_gallery.png","assets/images/cover_images/notebook_app.png","assets/images/cover_images/blog_3.png","data/repositories-list.ts","components/carousel.tsx","components/repositories.tsx","components/notes-list.tsx","components/hero-section.tsx","components/home-page.tsx","App.tsx","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","NoteForm","isOpen","onClose","selectedNote","handleNoteCreate","handleNoteUpdate","useForm","mode","register","handleSubmit","formState","errors","isCentered","motionPreset","onSubmit","data","newNote","id","title","body","nanoid","pb","isInvalid","isRequired","name","placeholder","defaultValue","ref","validate","value","message","mt","borderRadius","type","colorScheme","isLoading","isSubmitting","mr","TopNav","useDisclosure","onOpen","mb","align","p","as","Link","to","motion","div","whileHover","scale","bgGradient","bgClip","_focus","boxShadow","outline","_hover","textDecoration","IconButton","Hamburger","transition","bg","Add","textShadow","ArrowRight","justifySelf","baseUrl","siteConfig","copyright","Date","getFullYear","author","github","twitter","linkedin","quora","dev","email","repo","url","issuesUrl","FooterSignup","className","action","position","px","height","rounded","_placeholder","borderWidth","top","right","ExternalFooterLink","href","isExternal","target","fontWeight","InternalFooterLink","iconProps","isRound","ExternalSocialLink","label","ChakraLink","PageFooter","flexDirection","gridTemplateColumns","borderTopWidth","borderTopColor","pt","d","columns","placement","cursor","isInline","spacing","justifyContent","alignItems","coverImages","repositoriesList","desc","technologies","stars","githubLink","liveLink","coverImage","variants","enter","direction","x","opacity","center","zIndex","exit","Carousel","imageUrl","React","page","setPage","imageIndex1","setImageIndex1","paginate","newDirection","console","log","index","findIndex","cImage","padding","AnimatePresence","initial","custom","img","src","animate","stiffness","damping","duration","drag","dragConstraints","left","dragElastic","onDragEnd","e","offset","velocity","swipe","Math","abs","swipePower","length","ChevronLeft","ChevronRightIcon","ChevronRight","ChevronLeftIcon","Repositories","setImageUrl","textColor","minH","in","offsetY","gridGap","overflow","map","y","maxW","mx","base","lg","width","objectFit","alt","fallbackSrc","handleClick","lineHeight","textAlign","isTruncated","ExternalLink","hasArrow","Star","ml","tech","textTransform","NotesList","notes","setNotes","note","py","maxH","w","role","_groupHover","letterSpacing","display","DeleteIcon","h","newNotes","filter","stopPropagation","onDelete","fontFamily","HeroSection","whileTap","sm","md","HomePage","setSelectedNote","find","newNotesState","withRouter","history","theme","push","location","pathname","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f4ac5f2.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import * as React from \"react\";\nimport {\n  Button,\n  ModalContent,\n  Modal,\n  ModalBody,\n  ModalOverlay,\n  ModalFooter,\n  ModalHeader,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  Textarea\n} from \"@chakra-ui/react\";\nimport { nanoid } from \"nanoid\";\nimport { SubmitHandler } from \"react-hook-form\";\nimport { useForm } from \"react-hook-form\";\n\nexport interface NoteFormProps {\n  isOpen: boolean;\n  onClose: () => void;\n  selectedNote?: note;\n  handleNoteCreate?: (note: note) => void;\n  handleNoteUpdate?: (note: note) => void;\n}\n\ntype FormInputs = {\n  title: string;\n  body: string;\n};\n\nconst NoteForm: React.SFC<NoteFormProps> = ({\n  isOpen,\n  onClose,\n  selectedNote,\n  handleNoteCreate,\n  handleNoteUpdate\n}) => {\n  const { register, handleSubmit, formState, errors } = useForm<FormInputs>({\n    mode: \"onChange\"\n  });\n\n  const onSubmit: SubmitHandler<FormInputs> = data => {\n    let newNote: note = {\n      id: \"\",\n      title: data.title,\n      body: data.body\n    };\n    if (handleNoteCreate) {\n      newNote.id = nanoid();\n      if (handleNoteCreate) handleNoteCreate(newNote);\n    } else {\n      newNote.id = selectedNote ? selectedNote.id : \"\";\n      if (handleNoteUpdate) handleNoteUpdate(newNote);\n    }\n    onClose();\n  };\n\n  const validateTitle = (value: string) => {\n    if (!value) {\n      return \"Title is required\";\n    } else return true;\n  };\n\n  const validateBody = (value: string) => {\n    if (!value) {\n      return \"Body is required\";\n    } else return true;\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      isCentered\n      motionPreset=\"slideInBottom\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <ModalHeader>{selectedNote ? \"Edit\" : \"Create\"} a Note</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl isInvalid={!!errors?.title} isRequired>\n              <FormLabel>Title</FormLabel>\n              <Input\n                name=\"title\"\n                placeholder=\"Title\"\n                defaultValue={selectedNote?.title}\n                ref={register({ validate: validateTitle })}\n              />\n              <FormErrorMessage>\n                {!!errors?.title && errors?.title?.message}\n              </FormErrorMessage>\n            </FormControl>\n            <FormControl mt={4} isInvalid={!!errors?.body} isRequired>\n              <FormLabel>Body</FormLabel>\n              <Textarea\n                name=\"body\"\n                placeholder=\"Body\"\n                size=\"sm\"\n                borderRadius=\"5px\"\n                defaultValue={selectedNote?.body}\n                ref={register({ validate: validateBody })}\n              />\n              <FormErrorMessage>\n                {!!errors?.body && errors?.body?.message}\n              </FormErrorMessage>\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              type=\"submit\"\n              colorScheme=\"blue\"\n              isLoading={formState.isSubmitting}\n              mr={3}\n            >\n              Save\n            </Button>\n            <Button onClick={onClose}>Cancel</Button>\n          </ModalFooter>\n        </form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default NoteForm;\n","import * as React from \"react\";\nimport {\n  Box,\n  Text,\n  Flex,\n  Spacer,\n  Heading,\n  Menu,\n  MenuItem,\n  MenuDivider,\n  MenuButton,\n  IconButton,\n  MenuList,\n  HStack,\n  useDisclosure\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { AddIcon, HamburgerIcon, ArrowRightIcon } from \"@chakra-ui/icons\";\nimport { ColorModeSwitcher } from \"../ColorModeSwitcher\";\nimport NoteForm from \"./note-form\";\nimport { motion } from \"framer-motion\";\n\nexport interface TopNavProps {\n  handleNoteCreate?: (note: note) => void;\n}\n\nexport const TopNav: React.SFC<TopNavProps> = ({ handleNoteCreate }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Flex mb={\"30px\"} align=\"center\">\n        <Box p=\"2\" as={Link} to=\"/\">\n          <motion.div whileHover={{ scale: 1.1 }}>\n            <Heading\n              as=\"h1\"\n              size=\"xl\"\n              bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n              bgClip=\"text\"\n              _focus={{ boxShadow: \"none\", outline: \"none\" }}\n              _hover={{\n                textDecoration: \"none\",\n                bgGradient: \"linear(to-r, red.500, yellow.500)\"\n              }}\n            >\n              Notebook App\n            </Heading>\n          </motion.div>\n        </Box>\n        <Spacer />\n        <Box>\n          <HStack>\n            <Menu>\n              <MenuButton\n                as={IconButton}\n                aria-label=\"Options\"\n                icon={<HamburgerIcon />}\n                transition=\"all 0.2s\"\n                size=\"md\"\n                variant=\"outline\"\n                _hover={{ bg: \"gray.400\" }}\n                _focus={{ boxShadow: \"outline\" }}\n              />\n              <MenuList fontSize=\"sm\">\n                <MenuItem icon={<AddIcon />} onClick={onOpen}>\n                  {\" \"}\n                  <Text textShadow=\"1px 1px #9c1786\">New Note</Text>\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem icon={<ArrowRightIcon />} as={Link} to=\"/projects\">\n                  {\" \"}\n                  <Text textShadow=\"1px 1px #9c1786\">\n                    Open Source Repositories\n                  </Text>\n                </MenuItem>\n              </MenuList>\n            </Menu>\n            <ColorModeSwitcher justifySelf=\"flex-end\" />\n          </HStack>\n        </Box>\n      </Flex>\n      <NoteForm\n        isOpen={isOpen}\n        onClose={onClose}\n        handleNoteCreate={handleNoteCreate}\n      />\n    </>\n  );\n};\n","const baseUrl = 'https://github.com/MA-Ahmad/notebook';\n\nconst siteConfig = {\n  copyright: `Copyright © ${ new Date().getFullYear() } Muhammad Ahmad. All Rights Reserved.`,\n  author: {\n    name: 'Muhammad Ahmad',\n    github: 'https://github.com/MA-Ahmad',\n    twitter: 'https://twitter.com/muhammad_ahmaad',\n    linkedin: 'https://linkedin.com/in/muhammad-ahmad20',\n    quora: 'https://www.quora.com/profile/Muhammad-Ahmad-66',\n    dev: 'https://dev.to/m_ahmad',\n    email: 'muhammad.ahmad8043@gmail.com'\n  },\n  repo: {\n    url: baseUrl,\n    issuesUrl: `${ baseUrl }/issues/new`,\n  }\n};\n\nexport default siteConfig;\n","import * as React from \"react\";\nimport { Box, Button, Heading, Input, Text } from \"@chakra-ui/react\";\n\nexport function FooterSignup() {\n  return (\n    <>\n      <Heading fontSize=\"24px\" mb=\"15px\" className=\"yellow-gradient-color\">\n        Be the first to know\n      </Heading>\n      <Text color=\"gray.400\" mb=\"15px\">\n        Get notified about the upcoming sessions, news, articles, jobs, and\n        opensource projects.\n      </Text>\n\n      <form action=\"#\">\n        <Box position=\"relative\">\n          <Input\n            type=\"email\"\n            isRequired\n            name=\"entry.1808449400\"\n            px=\"25px\"\n            bg=\"gray.900\"\n            height=\"50px\"\n            rounded=\"50px\"\n            _placeholder={{ color: \"gray.600\" }}\n            placeholder=\"Enter your email\"\n            _focus={{ outline: 0 }}\n            color=\"gray.100\"\n            borderWidth={0}\n          />\n          <Button\n            type=\"submit\"\n            height=\"50px\"\n            color=\"gray.100\"\n            _hover={{ bg: \"yellow.400\", color: \"gray.900\" }}\n            position=\"absolute\"\n            top=\"0\"\n            right=\"0\"\n            bg=\"gray.700\"\n            rounded=\"50px\"\n            px=\"25px\"\n          >\n            Subscribe\n          </Button>\n        </Box>\n      </form>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  Box,\n  Link as ChakraLink,\n  SimpleGrid,\n  Stack,\n  Text,\n  Popover,\n  PopoverTrigger,\n  Portal,\n  PopoverContent,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  IconButton\n} from \"@chakra-ui/react\";\nimport siteConfig from \"../configs/site-config\";\nimport { FooterSignup } from \"./footer-signup\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FaGithub,\n  FaDev,\n  FaLinkedin,\n  FaQuora,\n  FaTwitter\n} from \"react-icons/fa\";\n\ntype ExternalFooterLinkProps = {\n  href: string;\n  text: string;\n  isExternal?: boolean;\n};\n\nconst ExternalFooterLink = (props: ExternalFooterLinkProps) => {\n  const { href, text, isExternal = true } = props;\n\n  return (\n    <ChakraLink\n      _focus={{ outline: \"none\", boxShadow: \"none\" }}\n      href={href}\n      target={isExternal ? \"_blank\" : \"_self\"}\n      fontWeight={500}\n      color=\"gray.500\"\n      _hover={{ color: \"gray.600\", textDecoration: \"none\" }}\n    >\n      {text}\n    </ChakraLink>\n  );\n};\n\ntype InternalFooterLinkProps = {\n  href: string;\n  text: string;\n};\n\nconst InternalFooterLink = (props: InternalFooterLinkProps) => {\n  const { href, text } = props;\n\n  return (\n    <Link to={href}>\n      <a>\n        <ChakraLink\n          _focus={{ outline: \"none\", boxShadow: \"none\" }}\n          as=\"span\"\n          fontWeight={500}\n          color=\"gray.500\"\n          _hover={{ color: \"gray.600\", textDecoration: \"none\" }}\n        >\n          {text}\n        </ChakraLink>\n      </a>\n    </Link>\n  );\n};\n\nconst iconProps = {\n  variant: \"ghost\",\n  size: \"lg\",\n  isRound: true\n};\n\ntype ExternalSocialLinkProps = {\n  href: string;\n  label: string;\n  isExternal?: boolean;\n  type: string;\n  icon: any;\n};\n\nconst ExternalSocialLink = (props: ExternalSocialLinkProps) => {\n  const { href, label, icon, type, isExternal = true } = props;\n\n  return (\n    <IconButton\n      as={ChakraLink}\n      href={href}\n      target={isExternal ? \"_blank\" : \"_self\"}\n      aria-label={label}\n      icon={icon}\n      colorScheme={type}\n      {...iconProps}\n    />\n  );\n};\n\nexport function PageFooter() {\n  return (\n    <SimpleGrid\n      flexDirection=\"column-reverse\"\n      gridTemplateColumns={[\"1fr\", \"1fr\", \"1fr 1fr\", \"1fr 1fr\"]}\n      borderTopWidth={2}\n      mt=\"30px\"\n      borderTopColor=\"gray.900\"\n      pt=\"20px\"\n    >\n      <Box d={[\"block\", \"block\", \"none\", \"none\"]} mb=\"30px\">\n        <FooterSignup />\n      </Box>\n      <Box>\n        <SimpleGrid columns={[1, 1, 2, 2]}>\n          <Stack mb={[\"10px\", \"10px\", 0, 0]}>\n            <Text as=\"span\">\n              <ExternalFooterLink\n                href={`mailto:${siteConfig.author.email}`}\n                text=\"Contact us\"\n              />\n            </Text>\n            <Text as=\"span\">\n              <ExternalFooterLink\n                href={siteConfig.repo.url}\n                text=\"Contribute\"\n              />\n            </Text>\n            <Text as=\"span\">\n              <InternalFooterLink\n                href=\"/projects\"\n                text=\"Open source projects\"\n              />\n            </Text>\n          </Stack>\n          <Stack>\n            <Text as=\"span\">\n              <Popover placement=\"top\">\n                <PopoverTrigger>\n                  <Text\n                    as=\"span\"\n                    _focus={{ outline: \"none\", boxShadow: \"none\" }}\n                    fontWeight={500}\n                    color=\"gray.500\"\n                    cursor=\"pointer\"\n                    _hover={{ color: \"gray.600\", textDecoration: \"none\" }}\n                  >\n                    Social Accounts\n                  </Text>\n                </PopoverTrigger>\n                <Portal>\n                  <PopoverContent>\n                    <PopoverArrow />\n                    <PopoverCloseButton />\n                    <PopoverBody>\n                      <Stack\n                        as=\"footer\"\n                        isInline\n                        spacing={[1, 2]}\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                      >\n                        <ExternalSocialLink\n                          href={siteConfig.author.github}\n                          icon={<FaGithub />}\n                          type=\"gray\"\n                          label=\"Github Account\"\n                        />\n                        <ExternalSocialLink\n                          href={siteConfig.author.dev}\n                          icon={<FaDev />}\n                          type=\"gray\"\n                          label=\"Dev Account\"\n                        />\n                        <ExternalSocialLink\n                          href={siteConfig.author.linkedin}\n                          icon={<FaLinkedin />}\n                          type=\"linkedin\"\n                          label=\"LinkedIn Account\"\n                        />\n                        <ExternalSocialLink\n                          href={siteConfig.author.twitter}\n                          icon={<FaTwitter />}\n                          type=\"twitter\"\n                          label=\"Twitter Account\"\n                        />\n                        <ExternalSocialLink\n                          href={siteConfig.author.quora}\n                          icon={<FaQuora />}\n                          type=\"red\"\n                          label=\"Quora Account\"\n                        />\n                      </Stack>\n                    </PopoverBody>\n                  </PopoverContent>\n                </Portal>\n              </Popover>\n            </Text>\n\n            <Text as=\"span\">\n              <ExternalFooterLink\n                href={`mailto:${siteConfig.author.email}`}\n                text=\"Sponsor\"\n              />\n            </Text>\n            <Text as=\"span\">\n              <ExternalFooterLink\n                href={\"/#faqs\"}\n                isExternal={false}\n                text=\"FAQs\"\n              />\n            </Text>\n          </Stack>\n        </SimpleGrid>\n        <Text mt=\"20px\" color=\"gray.500\">\n          Made with 🧡 by{\" \"}\n          <ChakraLink\n            _focus={{ boxShadow: \"none\", outline: \"none\" }}\n            target=\"_blank\"\n            href={siteConfig.author.github}\n            fontWeight={600}\n            color={\"gray.400\"}\n            bgClip=\"text\"\n            bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n            _hover={{\n              bgGradient: \"linear(to-r, red.500, yellow.500)\"\n            }}\n          >\n            Muhammad Ahmad\n          </ChakraLink>{\" \"}\n        </Text>\n      </Box>\n      <Box d={[\"none\", \"none\", \"block\", \"block\"]}>\n        <FooterSignup />\n      </Box>\n    </SimpleGrid>\n  );\n}\n","import img1 from \"../assets/images/cover_images/blog_1.png\";\nimport img2 from \"../assets/images/cover_images/blog_2.png\";\nimport img3 from \"../assets/images/cover_images/portfolio.png\";\nimport img4 from \"../assets/images/cover_images/image_gallery.png\";\nimport img5 from \"../assets/images/cover_images/notebook_app.png\";\nimport img6 from \"../assets/images/cover_images/blog_3.png\";\n\nconst coverImages = [\n  img1,\n  img2,\n  img3,\n  img4,\n  img5,\n  img6\n];\n\nexport default coverImages;\n","export default __webpack_public_path__ + \"static/media/blog_1.e55bd114.png\";","export default __webpack_public_path__ + \"static/media/blog_2.3712eddc.png\";","export default __webpack_public_path__ + \"static/media/portfolio.d477ed4c.png\";","export default __webpack_public_path__ + \"static/media/image_gallery.b1ca697a.png\";","export default __webpack_public_path__ + \"static/media/notebook_app.f4e4e3bd.png\";","export default __webpack_public_path__ + \"static/media/blog_3.d0737200.png\";","import coverImages from \"./cover_images\";\n\nconst repositoriesList = [\n  {\n    title: \"Blog App\",\n    desc: \"A Blog App built by using React, ChakraUI and Formik.\",\n    technologies: [\n      { name: \"React\", color: \"green\" },\n      { name: \"ChakraUi\", color: \"teal\" }\n    ],\n    stars: 9,\n    githubLink: \"https://github.com/MA-Ahmad/reactBlog\",\n    liveLink: \"https://ma-ahmad.github.io/reactBlog\",\n    coverImage: coverImages[0]\n  },\n  {\n    title: \"Blog App + Authentication\",\n    desc: \"A Blog App built by using React, Rails, ChakraUI and Formik.\",\n    technologies: [\n      { name: \"React\", color: \"green\" },\n      { name: \"Rails\", color: \"red\" },\n      { name: \"ChakraUi\", color: \"teal\" }\n    ],\n    stars: 6,\n    githubLink: \"https://github.com/MA-Ahmad/blog-app-react-frontend\",\n    liveLink: \"https://blog-frontend-react.herokuapp.com/\",\n    coverImage: coverImages[1]\n  },\n  {\n    title: \"Portfolio\",\n    desc: \"Personal portfolio app to show my skills and experience.\",\n    technologies: [\n      { name: \"React\", color: \"green\" },\n      { name: \"ChakraUi\", color: \"teal\" }\n    ],\n    stars: 2,\n    githubLink: \"https://github.com/MA-Ahmad/portfolio\",\n    liveLink: \"https://mahmad.me/\",\n    coverImage: coverImages[2]\n  },\n  {\n    title: \"Image Gallery\",\n    desc: \"This app built by using Tailwind CSS with React and Pixabay API.\",\n    technologies: [\n      { name: \"React\", color: \"green\" },\n      { name: \"Tailwindcss\", color: \"telegram\" }\n    ],\n    stars: 2,\n    githubLink: \"https://github.com/MA-Ahmad/react-image-gallery\",\n    liveLink: \"\",\n    coverImage: coverImages[3]\n  },\n  {\n    title: \"Notebook App\",\n    desc: \"Create notes for your daily important work.\",\n    technologies: [\n      { name: \"React\", color: \"green\" },\n      { name: \"Typescript\", color: \"blue\" },\n      { name: \"ChakraUi\", color: \"teal\" }\n    ],\n    stars: 2,\n    githubLink: \"https://github.com/MA-Ahmad/notebook\",\n    liveLink: \"\",\n    coverImage: coverImages[4]\n  },\n  {\n    title: \"Crud Demo App\",\n    desc: \"A simple react+rails(RR) CRUD app with tailwindcss.\",\n    technologies: [\n      { name: \"React\", color: \"green\" },\n      { name: \"Rails\", color: \"red\" },\n      { name: \"Tailwindcss\", color: \"telegram\" }\n    ],\n    stars: 2,\n    githubLink: \"https://github.com/MA-Ahmad/react_rails_blog\",\n    liveLink: \"https://react-on-rails-blog.herokuapp.com/\",\n    coverImage: coverImages[5]\n  },\n  {\n    title: \"Scrapper App\",\n    desc: \"A simple rails scrapper app to count html tags of a web page.\",\n    technologies: [{ name: \"Rails\", color: \"red\" }],\n    stars: 1,\n    githubLink: \"https://github.com/MA-Ahmad/rails-app\",\n    liveLink: \"https://urltohtmlapp.herokuapp.com/\",\n    coverImage: \"\"\n  }\n];\n\nexport default repositoriesList;\n","import * as React from \"react\";\nimport {\n  ModalContent,\n  Modal,\n  ModalBody,\n  ModalOverlay,\n  IconButton\n} from \"@chakra-ui/react\";\nimport { ChevronRightIcon, ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport coverImages from \"../data/cover_images\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"../assets/stylesheets/carousel.css\";\n\nconst variants = {\n  enter: (direction: number) => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: (direction: number) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  }\n};\n\nconst swipeConfidenceThreshold = 10000;\nconst swipePower = (offset: number, velocity: number) => {\n  return Math.abs(offset) * velocity;\n};\n\nexport interface CarouselProps {\n  onOpen: () => void;\n  onClose: () => void;\n  isOpen: boolean;\n  imageUrl?: string;\n}\n\nconst Carousel: React.SFC<CarouselProps> = ({\n  imageUrl,\n  onOpen,\n  onClose,\n  isOpen\n}) => {\n  const [[page, direction], setPage] = React.useState([0, 0]);\n  const [imageIndex1, setImageIndex1] = React.useState<number>(0);\n\n  const paginate = (newDirection: number) => {\n    setPage([page + newDirection, newDirection]);\n  };\n\n  React.useEffect(() => {\n    console.log(imageUrl);\n    const index = coverImages.findIndex(\n      (cImage: string) => cImage === imageUrl\n    );\n    setImageIndex1(index);\n  }, [imageUrl]);\n\n  const nextImage = (newDirection: number) => {\n    paginate(newDirection);\n    setImageIndex1(imageIndex1 + 1 < coverImages.length ? imageIndex1 + 1 : 0);\n  };\n\n  const prevImage = (newDirection: number) => {\n    paginate(newDirection);\n    setImageIndex1(\n      0 === imageIndex1 ? coverImages.length - 1 : imageIndex1 - 1\n    );\n  };\n\n  return (\n    <Modal isCentered onClose={onClose} size={\"6xl\"} isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalBody padding=\"0\">\n          <div className=\"carousel-container\">\n            <AnimatePresence initial={false} custom={direction}>\n              <motion.img\n                key={page}\n                src={coverImages[imageIndex1]}\n                custom={direction}\n                variants={variants}\n                initial=\"enter\"\n                animate=\"center\"\n                exit=\"exit\"\n                transition={{\n                  x: { type: \"spring\", stiffness: 300, damping: 30 },\n                  opacity: { duration: 0.2 }\n                }}\n                drag=\"x\"\n                dragConstraints={{ left: 0, right: 0 }}\n                dragElastic={1}\n                onDragEnd={(e, { offset, velocity }) => {\n                  const swipe = swipePower(offset.x, velocity.x);\n\n                  if (swipe < -swipeConfidenceThreshold) {\n                    paginate(1);\n                  } else if (swipe > swipeConfidenceThreshold) {\n                    paginate(-1);\n                  }\n                }}\n              />\n            </AnimatePresence>\n            <div className=\"next\" onClick={() => nextImage(1)}>\n              <IconButton\n                aria-label=\"left image\"\n                icon={<ChevronLeftIcon />}\n                cursor=\"pointer\"\n                as={ChevronRightIcon}\n                size=\"md\"\n                colorScheme=\"teal\"\n                borderRadius=\"full\"\n              />\n            </div>\n\n            <div className=\"prev\" onClick={() => prevImage(-1)}>\n              <IconButton\n                aria-label=\"right image\"\n                icon={<ChevronRightIcon />}\n                cursor=\"pointer\"\n                as={ChevronLeftIcon}\n                size=\"md\"\n                colorScheme=\"teal\"\n                borderRadius=\"full\"\n              />\n            </div>\n          </div>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default Carousel;\n","import * as React from \"react\";\nimport {\n  Heading,\n  Box,\n  Image,\n  Badge,\n  SimpleGrid,\n  Text,\n  Flex,\n  Center,\n  Link,\n  HStack,\n  Tooltip,\n  useColorModeValue,\n  SlideFade,\n  useDisclosure\n} from \"@chakra-ui/react\";\nimport { StarIcon, ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport repositoriesList from \"../data/repositories-list\";\nimport Carousel from \"./carousel\";\nimport { motion } from \"framer-motion\";\n\nconst Repositories = () => {\n  const [imageUrl, setImageUrl] = React.useState<string>(\"\");\n  const bg = useColorModeValue(\"white\", \"#2f3244\");\n  const textColor = useColorModeValue(\"gray.600\", \"#b5b1b1\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleClick = (imageUrl: string) => {\n    if (imageUrl) {\n      setImageUrl(imageUrl);\n      onOpen();\n    }\n  };\n\n  return (\n    <>\n      <Box minH={\"50vh\"}>\n        <Flex p=\"2\" justifyContent=\"center\">\n          <Heading\n            as=\"h1\"\n            size=\"xl\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            bgClip=\"text\"\n            _focus={{ boxShadow: \"none\", outline: \"none\" }}\n            _hover={{\n              textDecoration: \"none\",\n              bgGradient: \"linear(to-r, red.500, yellow.500)\"\n            }}\n          >\n            Repositories\n          </Heading>\n        </Flex>\n        <SlideFade in={true} offsetY=\"50vh\">\n          <SimpleGrid\n            columns={[1, 2, 2, 3]}\n            mt=\"40px\"\n            gridGap=\"10px\"\n            position=\"relative\"\n            overflow=\"hidden\"\n          >\n            {repositoriesList.map((repo, index) => (\n              <motion.div whileHover={{ y: -10 }} key={index}>\n                <Center>\n                <Box\n                  maxW=\"sm\"\n                  height=\"fit-content\"\n                  borderWidth=\"1px\"\n                  borderRadius=\"lg\"\n                  overflow=\"hidden\"\n                  boxShadow=\"md\"\n                  mx=\"5px\"\n                  mb=\"10px\"\n                  mt=\"10px\"\n                  _hover={{ boxShadow: \"lg\" }}\n                >\n                  <Image\n                    height={{ base: \"28vh\", lg: \"32vh\" }}\n                    cursor={repo.coverImage ? \"pointer\" : \"auto\"}\n                    width={\"100%\"}\n                    src={repo.coverImage}\n                    objectFit=\"cover\"\n                    alt=\"cover image\"\n                    fallbackSrc=\"https://via.placeholder.com/320x216/DCDFDF/ffffff/?text=CoverImage\"\n                    onClick={() => handleClick(repo.coverImage)}\n                  />\n                  <Box p=\"5\" bg={bg}>\n                    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                      <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"h6\"\n                        fontSize=\"md\"\n                        lineHeight=\"tight\"\n                        textAlign=\"left\"\n                        isTruncated\n                      >\n                        <Link\n                          href={repo.liveLink || repo.githubLink}\n                          textDecoration={\"none !important\"}\n                          isExternal\n                        >\n                          {repo.title}\n                          <ExternalLinkIcon mx=\"3px\" />\n                        </Link>\n                      </Box>\n                      <Box mt=\"1\">\n                        {repo.stars ? (\n                          <Link\n                            href={repo.githubLink}\n                            textDecoration={\"none !important\"}\n                            isExternal\n                          >\n                            <Tooltip\n                              hasArrow\n                              label=\"Github stars\"\n                              placement=\"top-end\"\n                            >\n                              <Box>\n                                <StarIcon color=\"teal.300\" fontSize=\"sm\" />\n                                <Box\n                                  as=\"span\"\n                                  ml=\"2\"\n                                  color={textColor}\n                                  fontSize=\"sm\"\n                                >\n                                  {repo.stars}\n                                </Box>\n                              </Box>\n                            </Tooltip>\n                          </Link>\n                        ) : (\n                          \"\"\n                        )}\n                      </Box>\n                    </Flex>\n                    <Box textAlign=\"left\">\n                      <HStack spacing=\"1\" mt=\"2\" mb=\"2\">\n                        {repo.technologies.map((tech, index) => (\n                          <Badge\n                            borderRadius=\"full\"\n                            px=\"1\"\n                            colorScheme={tech.color}\n                            textTransform=\"lowercase\"\n                            key={index}\n                          >\n                            {tech.name}\n                          </Badge>\n                        ))}\n                      </HStack>\n                    </Box>\n                    <Box color={textColor} fontSize=\"md\" textAlign=\"left\">\n                      {repo.desc}\n                    </Box>\n                  </Box>\n                </Box>\n                </Center>\n              </motion.div>\n            ))}\n          </SimpleGrid>\n        </SlideFade>\n      </Box>\n      <Carousel\n        imageUrl={imageUrl}\n        onOpen={onOpen}\n        onClose={onClose}\n        isOpen={isOpen}\n      />\n    </>\n  );\n};\n\nexport default Repositories;\n","import * as React from \"react\";\nimport {\n  Box,\n  Stack,\n  Heading,\n  SimpleGrid,\n  Text,\n  Flex,\n  Center,\n  Fade,\n  Icon,\n  useColorModeValue\n} from \"@chakra-ui/react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\n\nexport interface NotesListProps {\n  notes: note[];\n  handleClick: (id: string) => void;\n  setNotes: (note: note[]) => void;\n}\n\nconst NotesList: React.SFC<NotesListProps> = ({\n  notes,\n  handleClick,\n  setNotes\n}) => {\n  const bg = useColorModeValue(\"white\", \"#2f3244\");\n\n  const onDelete = (\n    id: string,\n    e: React.MouseEvent<SVGElement, MouseEvent>\n  ) => {\n    const newNotes: note[] = notes.filter((note: note) => note.id !== id);\n    setNotes(newNotes);\n    e.stopPropagation();\n  };\n\n  return (\n    <>\n      <Box minH={\"50vh\"}>\n        <SimpleGrid\n          columns={[1, 2, 2, 3]}\n          mt=\"40px\"\n          gridGap=\"10px\"\n          position=\"relative\"\n          overflow=\"hidden\"\n        >\n          {notes.map(note => (\n            <Fade in={true}>\n              <Center py={6} px={5} key={note.id}>\n                <Box\n                  maxH={\"400px\"}\n                  w=\"100%\"\n                  boxShadow={\"lg\"}\n                  rounded={\"md\"}\n                  p={6}\n                  overflow={\"hidden\"}\n                  cursor=\"pointer\"\n                  _hover={{ boxShadow: \"xl\" }}\n                  bg={bg}\n                  role=\"group\"\n                  onClick={() => handleClick(note.id)}\n                >\n                  <Stack>\n                    <Flex\n                      _groupHover={{ justifyContent: \"space-between\" }}\n                      justifyContent=\"center\"\n                      align=\"center\"\n                    >\n                      <Box>\n                        <Text\n                          color={\"green.500\"}\n                          textTransform={\"uppercase\"}\n                          fontWeight={800}\n                          fontSize={\"sm\"}\n                          letterSpacing={1.1}\n                        >\n                          Note\n                        </Text>\n                      </Box>\n                      <Box _groupHover={{ display: \"block\" }} display=\"none\">\n                        <Icon\n                          color={\"green.500\"}\n                          _hover={{ color: \"#ca364a\" }}\n                          _groupHover={{ display: \"block\" }}\n                          as={DeleteIcon}\n                          w={4}\n                          h={4}\n                          onClick={e => onDelete(note.id, e)}\n                        />\n                      </Box>\n                    </Flex>\n                    <Heading\n                      fontSize={\"xl\"}\n                      fontFamily={\"body\"}\n                      textTransform=\"capitalize\"\n                    >\n                      {note.title}\n                    </Heading>\n\n                    <Text color={\"gray.500\"} fontSize=\"md\">\n                      {note.body}\n                    </Text>\n                  </Stack>\n                </Box>\n              </Center>\n            </Fade>\n          ))}\n        </SimpleGrid>\n      </Box>\n    </>\n  );\n};\n\nexport default NotesList;\n","import * as React from \"react\";\nimport { Heading, Text, Flex, SlideFade } from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\n\nexport default function HeroSection() {\n  return (\n    <>\n      <Flex h={\"55vh\"} justifyContent=\"center\" align=\"center\">\n        <SlideFade in={true} offsetY=\"50vh\">\n          <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}>\n            <Heading\n              fontWeight={600}\n              fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\n              lineHeight={\"110%\"}\n            >\n              <Text textShadow=\"1px 1px #9c1786\">Make notes for </Text>\n              <Text\n                as={\"span\"}\n                color={\"green.400\"}\n                bgGradient=\"linear(to-r, green.200, pink.500)\"\n                bgClip=\"text\"\n              >\n                your daily work\n              </Text>\n            </Heading>\n          </motion.div>\n        </SlideFade>\n      </Flex>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport NotesList from \"./notes-list\";\nimport HeroSection from \"./hero-section\";\nimport NoteForm from \"./note-form\";\n\nexport interface HomePageProps {\n  notes: note[];\n  setNotes: (note: note[]) => void;\n}\n\nexport const HomePage: React.SFC<HomePageProps> = ({ notes, setNotes }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [selectedNote, setSelectedNote] = React.useState<note>();\n\n  const handleClick = (id: string) => {\n    const selectedNote = notes.find((note: note) => note.id === id);\n    setSelectedNote(selectedNote);\n    onOpen();\n  };\n\n  const handleNoteUpdate = (newNote: note) => {\n    const newNotesState: note[] = [...notes];\n    const index = notes.findIndex((note: note) => note.id === newNote.id);\n    newNotesState[index] = newNote;\n    setNotes(newNotesState);\n  };\n\n  return (\n    <>\n      {notes.length ? (\n        <NotesList notes={notes} handleClick={handleClick} setNotes={setNotes} />\n      ) : (\n        <HeroSection />\n      )}\n      {isOpen ? (\n        <NoteForm\n          isOpen={isOpen}\n          onClose={onClose}\n          handleNoteUpdate={handleNoteUpdate}\n          selectedNote={selectedNote}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ChakraProvider, Box, theme } from \"@chakra-ui/react\";\nimport { TopNav } from \"./components/top-nav\";\nimport { PageFooter } from \"./components/page-footer\";\nimport Repositories from \"./components/repositories\";\nimport { HomePage } from \"./components/home-page\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\ntype AppComponentProps = RouteComponentProps;\n\nconst App: React.FC<AppComponentProps> = ({ history }) => {\n  const [notes, setNotes] = React.useState<note[]>([]);\n\n  const handleNoteCreate = (note: note) => {\n    const newNotesState: note[] = [...notes];\n    newNotesState.push(note);\n    setNotes(newNotesState);\n    if (history.location.pathname !== \"/\") history.push(\"/\");\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\" p={5}>\n        <TopNav handleNoteCreate={handleNoteCreate} />\n        <Switch>\n          <Route exact path=\"/projects\" component={Repositories} />\n          <Route\n            exact\n            path=\"/\"\n            component={() => <HomePage notes={notes} setNotes={setNotes} />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n        <PageFooter />\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport default withRouter(App);\n","import { Box, ColorModeScript } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <Router>\n      <Box maxW=\"1050px\" mx=\"auto\">\n        <App />\n      </Box>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}